(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{uqFV:function(e,a,n){"use strict";n.r(a),n.d(a,"_frontmatter",(function(){return c})),n.d(a,"default",(function(){return b}));n("1c7q"),n("abGl"),n("gZHo"),n("Fdmb"),n("Ir+3"),n("2mQt");var l=n("/FXl"),t=n("TjRS"),o=n("wcmV");n("aD51");function r(){return(r=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/hooks/useClearLocalStorage.mdx"}});var i={_frontmatter:c},s=t.a;function b(e){var a=e.components,n=function(e,a){if(null==e)return{};var n,l,t={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,["components"]);return Object(l.b)(s,r({},i,n,{components:a,mdxType:"MDXLayout"}),Object(l.b)("h1",null,"useClearLocalStorage"),Object(l.b)("h2",{id:"description"},"Description"),Object(l.b)("p",null,"This hook calls ",Object(l.b)("a",r({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"}),"localStorage.clear()")," to clear all items from ",Object(l.b)("inlineCode",{parentName:"p"},"localStorage"),". "),Object(l.b)("p",null,"All hooks will be reset back to their default values, or to ",Object(l.b)("inlineCode",{parentName:"p"},"null")," if none was provided."),Object(l.b)("h2",{id:"usage"},"Usage"),Object(l.b)("pre",null,Object(l.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"import { useClearLocalStorage } from 'react-use-window-localstorage';\n")),Object(l.b)("p",null,"In your function component:"),Object(l.b)("pre",null,Object(l.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"const clearLocalStorage = useClearLocalStorage();\n")),Object(l.b)("p",null,"Call ",Object(l.b)("inlineCode",{parentName:"p"},"clearLocalStorage()")," to clear localStorage."),Object(l.b)("h2",{id:"signature"},"Signature"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"useClearLocalStorage() => (() => void)")),Object(l.b)("h3",{id:"props"},"Props"),Object(l.b)("p",null,"The hook takes no props."),Object(l.b)("h3",{id:"return"},"Return"),Object(l.b)("p",null,"The hook returns a function, ",Object(l.b)("inlineCode",{parentName:"p"},"clearLocalStorage"),":"),Object(l.b)("pre",null,Object(l.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"clearLocalStorage() => void\n")),Object(l.b)("p",null,"Calling this function clears localStorage and synchronizes all hooks."),Object(l.b)("h2",{id:"example"},"Example"),Object(l.b)("p",null,"In the following example, four numbers are defaulted to ",Object(l.b)("inlineCode",{parentName:"p"},"0")," and can be set to randomly generated values. The fifth value has no default. Calling ",Object(l.b)("inlineCode",{parentName:"p"},"clearLocalStorage()")," will clear\nlocalStorage using ",Object(l.b)("inlineCode",{parentName:"p"},"localStorage.clear()")," and synchronize all hooks."),Object(l.b)("div",{style:{border:"solid 2px #67788a",padding:"20px"}},Object(l.b)(o.a,{mdxType:"UseClearExample"})),Object(l.b)("pre",null,Object(l.b)("code",r({parentName:"pre"},{className:"language-jsx"}),"import * as React from 'react';\nimport { useClearLocalStorage, useLocalStorageNumber } from 'react-use-window-localstorage';\n\nexport function UseClearExample() {\n  const [val1, setVal1] = useLocalStorageNumber('val1', 0);\n  const [val2, setVal2] = useLocalStorageNumber('val2', 0);\n  const [val3, setVal3] = useLocalStorageNumber('val3', 0);\n  const [val4, setVal4] = useLocalStorageNumber('val4', 0);\n  const [val5, setVal5] = useLocalStorageNumber('val5');\n  const clearLocalStorage = useClearLocalStorage();\n\n  return (\n    <div>\n      <div>\n        <div>\n          <strong>Stored values:</strong>\n          <ul>\n            <li>val1: {val1}</li>\n            <li>val2: {val2}</li>\n            <li>val3: {val3}</li>\n            <li>val4: {val4}</li>\n            <li>val5 (no default): {val5}</li>\n          </ul>\n        </div>\n      </div>\n      <div>\n        <button\n          onClick={() => {\n            setVal1(Math.random());\n            setVal2(Math.random());\n            setVal3(Math.random());\n            setVal4(Math.random());\n            setVal5(Math.random());\n          }}\n        >\n          Generate Random Values\n        </button>\n      </div>\n      <div>\n        <button onClick={() => clearLocalStorage()}>Clear</button>\n      </div>\n    </div>\n  );\n}\n")))}b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/hooks/useClearLocalStorage.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-hooks-use-clear-local-storage-mdx-34b6944369ba419f260f.js.map