{"version":3,"sources":["webpack:///../src/hooks/useLocalStorageNumber.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","style","border","padding","isMDXComponent"],"mappings":"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","file":"component---src-hooks-use-local-storage-number-mdx-0d7c2bcd49acb04b3869.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-use-local-storage/react-use-local-storage/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { UseLocalStorageNumberExample } from '../__docz__/components/UseLocalStorageNumberExample';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>useLocalStorageNumber</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`This hook gets and sets a `}<inlineCode parentName=\"p\">{`number`}</inlineCode>{` in `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\"\n      }}>{`localStorage`}</a>{`. `}</p>\n    <p>{`Features synchronization across hooks sharing the same key name.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useLocalStorageNumber } from 'react-use-window-localstorage';\n`}</code></pre>\n    <p>{`In your function component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const [value, setValue] = useLocalStorageNumber('pi', 3.14159);\n`}</code></pre>\n    <p>{`The hook takes a key name and an optional default value argument. The default value will be immediately written to localStorage and returned if no value is present already. Uses `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` when no default value is provided.`}</p>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`setValue`}</inlineCode>{` to read and write the value.`}</p>\n    <p>{`Because localStorage accepts strings only, the value is encoded using\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"\n      }}><inlineCode parentName=\"a\">{`JSON.stringify()`}</inlineCode></a>{`\nand decoded using `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\"\n      }}><inlineCode parentName=\"a\">{`JSON.parse()`}</inlineCode></a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"additional-features\"\n    }}>{`Additional Features`}</h3>\n    <p>{`The hook provides additional features in its return array, should you be interested:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const [value, setValue, loading, available, reset, restore] = useLocalStorageNumber('pi', 3.14159);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`A `}<inlineCode parentName=\"li\">{`loading`}</inlineCode>{` value of `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` indicates that the value is being loaded from localStorage.`}</li>\n      <li parentName=\"ul\">{`An `}<inlineCode parentName=\"li\">{`available`}</inlineCode>{` value of `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` indicates that `}<inlineCode parentName=\"li\">{`localStorage`}</inlineCode>{` is supported and available for use. `}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`reset()`}</inlineCode>{` function sets the value back to the provided default, or `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{` if none was given.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`restore()`}</inlineCode>{` function retrieves the latest value from localStorage. Use this if the localStorage value changes outside of this hook and you need to restore it to the latest.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"signature\"\n    }}>{`Signature`}</h2>\n    <p><inlineCode parentName=\"p\">{`useLocalStorageNumber(keyName: string, defaultValue?: number | null) => [number | null, (value: number | null) => void, boolean, () => void, () => void]`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`keyName`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`Required.`}</strong>{` Key name to use in localStorage.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`null`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional. Provide a default `}<inlineCode parentName=\"td\">{`number`}</inlineCode>{` value when the key's value is not found in localStorage. Will be immediately written to localStorage if not present. Use `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{` for no default.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"return\"\n    }}>{`Return`}</h3>\n    <p>{`The hook returns an array containing:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Index`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`null`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<inlineCode parentName=\"td\">{`number`}</inlineCode>{` value from localStorage, when `}<inlineCode parentName=\"td\">{`loading`}</inlineCode>{` is `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{`. Will be the default value (or `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{` if none provided) while loading is `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{`. If `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{` when not loading, the key was not found in localStorage.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`setValue`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(value: number`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`null) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sets the value in localStorage. Provide `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{` to set it back to the default value. Providing `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{` will delete the key from localStorage if the default value is `}<inlineCode parentName=\"td\">{`null`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`2`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`loading`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode>{` while the value loads from localStorage, `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{` otherwise.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`3`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`available`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode>{` if localStorage is supported and available for use, `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{` otherwise.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`4`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`reset`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`() => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Reset the value to the default.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`5`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`restore`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`() => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Retrieve the latest value from localStorage. Use this if the localStorage value changes outside of this hook and you need to restore it to the latest.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <div style={{\n      border: 'solid 2px #67788a',\n      padding: '20px'\n    }}>\n  <UseLocalStorageNumberExample mdxType=\"UseLocalStorageNumberExample\" />\n    </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import * as React from 'react';\nimport { useLocalStorageNumber } from 'react-use-window-localstorage';\n\nexport function UseLocalStorageNumberExample() {\n  const defaultValue = 3.14159;\n  const [enteredValue, setEnteredValue] = React.useState('');\n  const [value, setValue, loading, available, reset] = useLocalStorageNumber('numValue', defaultValue);\n  const [value2, setValue2, loading2] = useLocalStorageNumber('numValue', defaultValue);\n\n  return (\n    <div>\n      {!loading && (\n        <div>\n          <div>\n            Key \"numValue\":{' '}\n            <input\n              type=\"text\"\n              value={enteredValue}\n              onChange={e => setEnteredValue(e.target.value)}\n              onKeyPress={e => e.key === 'Enter' && setValue(parseFloat(enteredValue))}\n            />\n            <button onClick={() => setValue(parseFloat(enteredValue))}>Set</button>\n          </div>\n          <div>\n            <strong>Stored value:</strong> {value}\n          </div>\n        </div>\n      )}\n      <div>\n        <button onClick={() => reset()}>Reset \"numValue\" to default</button>\n      </div>\n      <hr />\n      {!loading2 && <div>Another \"numValue\" hook (different hook, will synchronize): {value2}</div>}\n    </div>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}